---
 - name:  provisioning EC2 instances using Ansible
   hosts: localhost
   connection: local
   gather_facts: False
   tags: provis

   vars:
     keypair: ansible-host
     instance_type: t2.micro
     image: ami-06ec8443c2a35b0ba
     wait: yes
     group: webserver
     count: 2
     region: eu-central-1
     security_group: nginx-sec-grp

   tasks:

     - name: create security group
       local_action:
         module: ec2_group
         name: "{{ security_group }}"
         description: Security Group for webserver Servers
         region: "{{ region }}"
         rules:
            - proto: tcp
              from_port: 22
              to_port: 22
              cidr_ip: 18.185.177.100/32
            - proto: tcp
              from_port: 80
              to_port: 80
              cidr_ip: 0.0.0.0/0
         rules_egress:
            - proto: all
              cidr_ip: 0.0.0.0/0
       register: basic_firewall
     - name: launch the new EC2 instances
       local_action:  ec2
                      group={{ security_group }}
                      instance_type={{ instance_type}}
                      image={{ image }}
                      wait=true
                      region={{ region }}
                      keypair={{ keypair }}
                      count={{count}}
       register: ec2
     - name: add Tag to EC2 instances
       local_action: ec2_tag resource={{ item.id }} region={{ region }} state=present
       with_items: "{{ ec2.instances }}"
       args:
         tags:
           Name: ec2-nginx-luxsoft


     - name: add new instance to host group
       add_host:
         hostname: "{{ item.public_ip }}"
         groupname: launched
       loop: "{{ ec2.instances }}"

     - name: wait for SSH to come up
       delegate_to: "{{ item.public_dns_name }}"
       wait_for_connection:
         delay: 60
         timeout: 320
       loop: "{{ ec2.instances }}"

 - name: configure instances
   hosts: launched
   become: True
   gather_facts: True
   roles:
     - install_packages
     - bld_dply_docker_image 
